"use client";

import React, { useState } from "react";
import { useRouter } from "next/navigation";
import "@/styles/resetPassword.css"; // ‡πÉ‡∏ä‡πâ‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏î‡πâ

export default function AssignRobot() {
    const router = useRouter();
    const [robotToken, setRobotToken] = useState("");
    const [robotName, setRobotName] = useState("");
    const [loading, setLoading] = useState(false);

    const handleAssign = async (e: React.FormEvent) => {
        e.preventDefault();

        if (!robotToken || !robotName) {
            alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å token ‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
            return;
        }

        setLoading(true);

        try {
            // üëâ ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏à‡∏£‡∏¥‡∏á ‡πÅ‡∏Ñ‡πà mock ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
            console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ú‡∏π‡∏Å‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå...");
            console.log("robotToken:", robotToken);
            console.log("robotName:", robotName);

            // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
            alert("‡∏ú‡∏π‡∏Å‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
            router.push("/dashboard"); // ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ dashboard ‡∏´‡∏•‡∏±‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à

        } catch (error) {
            console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error);
            alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ú‡∏π‡∏Å‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå‡πÑ‡∏î‡πâ");
        } finally {
            setLoading(false);
        }
    }

    return (
        <div className="reset-password-container">
            <div className="crad-reset-password">
                <div className="form-box-reset-password">
                    <h2>Assign Robot</h2>

                    <form onSubmit={handleAssign}>
                        <input
                            type="text"
                            placeholder="Robot Token"
                            value={robotToken}
                            onChange={(e) => setRobotToken(e.target.value)}
                            required
                        />
                        <input
                            type="text"
                            placeholder="Robot Name"
                            value={robotName}
                            onChange={(e) => setRobotName(e.target.value)}
                            required
                        />
                        <button type="submit" disabled={loading}>
                            {loading ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å..." : "Assign Robot"}
                        </button>
                    </form>

                    <p className="back-to-login" onClick={() => router.push("/login-registers")}>
                        Back to login
                    </p>
                </div>

                <div className="image-box">
                    <h1>Welcome ATJ Robot</h1>
                    <img src="/logomine1.png" alt="Robot" />
                </div>
            </div>
        </div>
    );
}
